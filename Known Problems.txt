Known Problems:
    
        Una regola, non so quale ma mi basterebbe guardare nel report, crea delle task senza outgoing flows a volte. Credo sia la 3.


        Aggiustare LA REGOLA 3C:

            ========= Reverse3c ==========
            Alla fine faccio così per la regola 3c.
            Evito solo che si creino coppie di contraddizioni, nel modo che ho già usato.
            Se capita che ci sono dei gateway vuoti, li cancello alla fine.
            Basta che controllo se il gateway split punta a un merge di quelli nuovi, ma come faccio?
            Mi creo una lista di predecessor del primo merge.
            Anzi faccio proprio così direttamente alla fine del programmino:

                ritrovo i miei follower
                ritrovo i predecessor del MP
                Per ogni follower controllo che il suo target diretto non sia incluso nei predecessor.
                Se lo è, li cancello entrambi.
                Fare tutto questo in un metodo a parte che prende come input solo il nuovo parallel split e il MP.


TODO:

        HIGH PRIORITY:
    
            Se ci sono due pools, ci sono anche due processi. Basta che quando creo nuovi elementi controllo in quale process sono, lo uso come argomento del metodo. E per sapere in quale process sono, basta che nel primo loop di ogni regola mi salvo la variabile string processID del process in cui si trova l'elemento di partenza.
            Le lanes invece funzionano già ora.

            Il programma non riconosce i folder se non finiscono con '\'

        LOW PRIORITY:

            I initially misunderstood rules 1 and 2 and tought rule 1 was only about parallel gateways and rule 2 was only about exclusive gateways. Now the rules work correctly, but rule 1 and rule 2, in both directions, now contain a lot of duplicate code that should be refactored.

            Fare overload metodo per creare nuovi sequenceFlow con già un certo target e una certa source al momento della creazione. Basta chiamare il metodo standard per creare flow, poi setSource e setTarget. 
       
            Cambiare naming metodi e commenti e variables da 'split' a 'fork', e da 'merge' a 'join'.
        
            Fare dei test con i subProcesses. Non dovrebbe rompere niente per come sono scritti, non verranno riconosciuti come task però a meno che non aggiungo un OR. Ma forse è un bene che non vengano riconosciuti come task.

            Cosa succede se invece dello start event normale c'è un message event ad esempio o altri tipi di start?
            Ho provato e non succede niente, sono child elements che lo definiscono, quindi sei a posto.
            Magari metti qualche test dove c'è un start event speciale tanto per fare vedere che il tuo programma funziona lo stesso.

            Capire perché le label sono al posto giusto anche se io non le modifico mai. Forse le loro coordinate sono relative?

            Provare a vedere come sono scritti i modelli di inubit, e eventualmente aggiungere compatibilità con inubit.

            Clean the console.

            Gestisci le eccezioni con try e catch.

            Se fai tre esecuzioni del programma in breve successione, la terza non funziona e non da messaggio di errore. Perché?